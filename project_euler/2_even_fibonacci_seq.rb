require 'benchmark'
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def even_fib(limit) 
  time = Benchmark.realtime {
    # fib sequence goes [0,1,2,3,4,5,6,7,8,9, 10 ...]
    # first few terms = [1,1,2,3,5,8,13..]
    limit = limit 
    sum = 0
    first = 1 
    second = 1
    until second > limit 
      if second % 2 ==0 
        sum += second
      end
      total = first + second
      puts "adding first #{first} to second value #{second}"
      first = second
      second = total
      puts "total of two sequence = #{total}"
      puts " ---------------------------------------"
      puts "even sum is #{sum}"
      puts " ---------------------------------------"
    end
  }
  p "it took #{time} seconds"
end
even_fib(4000000)
# below is just for my practice on writing fibonacci sequence
def regular_fib(sequence)
  first = 0
  second = 1
  if sequence == 0
    puts "total = 0"
  end
  sequence.times do 
    total = first + second
    puts "total(#{total}) = #{first} + #{second}"
    first = second
    second = total
  end 
end
regular_fib(100)
regular_fib(0)
